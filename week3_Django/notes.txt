------------------------------------ Django -----------------------------------
Python web framework that enables the creation of dynamic web applications with
python 

Terminal commands related to Django:
pip install Django
Django-admin startproject <project_name>
python manage.py runserver
python manage.py startapp <app_name>


Important pre-created files in a Django project:
1) manage.py        Used to execute commands on a Django project
2) settings.py      Contains important configurations for a Django project
3) urls.py          Contains all the routes for the web application in a Django project

Note: A Django project can contain many Django applications 

Important pre-created files in a Django application:
1) views.py         Used to define what the user sees when visiting a specific route

------------------------------------ Routes -----------------------------------
A urls.py file should be created in each application in a Django project to 
define all the routes for that specific application

Example urls.py file in a Django application:
    from django.urls import path
    from . import views

    urlpatterns = [
        path("", views.index, name="index"),
        path("brian/", views.brian, name="brian"),
        path("david/", views.david, name="david")
    ]

------------------------------------ Views ------------------------------------
Each application in a Django project has a pre-created file called views.py which
consists of python functions that define what the user sees when visiting a specific route

Example view in a views.py file that returns a HTTP Response:
    from django.http import HttpResponse

    def index(request):
        return HttpResponse("Hello, world!")

Example view in a views.py file that returns a HTML page:
    from django.shortcuts import render

    def index(request):
        return render(request, "index.html")


Extra context (variables) can also be passed into a HTML page in the form of a dictionary
Example view in a views.py file that provide extra context to a HTML page:
    from django.shortcuts import render

    first_name = "David"
    def index(request):
        return render(request, "index.html", {
            "name": first_name
            "length": len(first_name)
        })

------------------------------------ Forms ------------------------------------
Forms can be created within Django as python classes in the views.py file and passed
into a HTML page from a view

Example form created within Django:
    from django import forms
    from django.shortcuts import render

    class NewForm(forms.Form):
        name = forms.CharField(label="First Name")

    def index(request):
        return render(request, "index.html"), {
            "form": NewForm()
        }

------------------------------------ Jinja ------------------------------------
Special placeholder syntax to have python code in a HTML file

Placeholders for variables in HTML:
   <body>hello, {{ name }}</body>

Placeholders for loops in HTML:
   {% for i in loop %}
        <!-- content -->
   {% endfor %}

Placeholders for conditional statements in HTML:
    {% if True %}
        <!-- content -->
    {% else %}
        <!-- content -->
    {% endif %}

Inheriting layouts in HTML:
    {% extends "layout.html" %}

    {% block body %}
        <!-- content -->
    {% endblock %}
 
Placeholders for static file locations in HTML:
    <link href="{% static 'styles.css' %}" rel="stylesheet">

Placeholders for redirecting file locations in HTML:
    <a href="{% url 'index' %}">Go to Index Page</a>